{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAUA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,EAjBA,CACXQ,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,yBACnCE,KAAMH,SAASC,cAAc,wBAC7BG,OAAQJ,SAASC,cAAc,0BAC/BI,OAAQL,SAASC,cAAc,YAiB5BF,KAAKO,iBAAiB,UAE3B,SAAqBC,GACnBA,EAAMC,iBACN,MACEC,UAAYlB,MAAAmB,EAAKP,KAAEA,EAAIC,OAAEA,IACvBG,EAAMI,cAEV,IAAIC,EAAeC,OAAOH,EAAMI,OAE5BC,EAAcF,OAAOV,EAAKW,OAE1BE,EAAgBH,OAAOT,EAAOU,OAGlC,IAAK,IAAIG,EAAW,EAAGA,GAAYD,EAAeC,GAAY,EAC5D5B,EAAc4B,EAAUL,GACrBM,MAAK,EAAC5B,SAAEA,EAAQC,MAAEA,MACjB4B,EAAAhC,GAASiC,OAAOC,QACd,uBAAqB/B,QAAiBC,MAAU,IAGnD+B,OAAM,EAAChC,SAAEA,EAAQC,MAAEA,MAClB4B,EAAAhC,GAASiC,OAAOG,QACd,sBAAoBjC,QAAeC,MAAU,IAGnDqB,GAAgBG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  firstDelay: document.querySelector('input[name = \"delay\"]'),\n  step: document.querySelector('input[name = \"step\"]'),\n  amount: document.querySelector('input[name = \"amount\"]'),\n  button: document.querySelector('button'),\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n// console.log();\n\nrefs.form.addEventListener('submit', onBtnSubmit);\n\nfunction onBtnSubmit(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  let promiseDelay = Number(delay.value);\n  // console.log(promiseDelay);\n  let promiseStep = Number(step.value);\n  // console.log(promiseStep);\n  let promiseAmount = Number(amount.value);\n  // console.log(promiseAmount);\n\n  for (let position = 1; position <= promiseAmount; position += 1) {\n    createPromise(position, promiseDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    promiseDelay += promiseStep;\n  }\n  // done\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","form","document","querySelector","firstDelay","step","amount","button","addEventListener","event","preventDefault","elements","delay1","currentTarget","promiseDelay","Number","value","promiseStep","promiseAmount","position1","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.26c72648.js.map"}