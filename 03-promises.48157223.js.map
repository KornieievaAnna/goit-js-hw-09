{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAUA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,KAjBM,CACXQ,KAAMC,SAASC,cAAc,SAC7BC,WAAYF,SAASC,cAAc,yBACnCE,KAAMH,SAASC,cAAc,wBAC7BG,OAAQJ,SAASC,cAAc,0BAC/BI,OAAQL,SAASC,cAAc,YAiB5BF,KAAKO,iBAAiB,UAE3B,SAAqBC,GACnBA,EAAMC,iBAYN,IAXA,IAEuBC,EAAnBF,EAAMG,cADRC,SAAYC,EAAKH,EAALlB,MAAOY,EAAIM,EAAJN,KAAMC,EAAMK,EAANL,OAGvBS,EAAeC,OAAOF,EAAMG,OAE5BC,EAAcF,OAAOX,EAAKY,OAE1BE,EAAgBH,OAAOV,EAAOW,OAGzBG,EAAW,EAAGA,GAAYD,EAAeC,GAAY,EAC5D7B,EAAc6B,EAAUL,GACrBM,MAAK,SAAAC,G,IAAG9B,EAAQ8B,EAAR9B,SAAUC,EAAK6B,EAAL7B,MACjB8B,EAAAlC,GAASmC,OAAOC,QACd,uBAAwCC,OAAflC,EAAS,QAAYkC,OAANjC,EAAM,M,IAGjDkC,OAAM,SAAAL,G,IAAG9B,EAAQ8B,EAAR9B,SAAUC,EAAK6B,EAAL7B,MAClB8B,EAAAlC,GAASmC,OAAOI,QACd,sBAAqCF,OAAflC,EAAS,QAAYkC,OAANjC,EAAM,M,IAGjDsB,GAAgBG,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  firstDelay: document.querySelector('input[name = \"delay\"]'),\n  step: document.querySelector('input[name = \"step\"]'),\n  amount: document.querySelector('input[name = \"amount\"]'),\n  button: document.querySelector('button'),\n};\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n// console.log();\n\nrefs.form.addEventListener('submit', onBtnSubmit);\n\nfunction onBtnSubmit(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  let promiseDelay = Number(delay.value);\n  // console.log(promiseDelay);\n  let promiseStep = Number(step.value);\n  // console.log(promiseStep);\n  let promiseAmount = Number(amount.value);\n  // console.log(promiseAmount);\n\n  for (let position = 1; position <= promiseAmount; position += 1) {\n    createPromise(position, promiseDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    promiseDelay += promiseStep;\n  }\n  // done\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","form","document","querySelector","firstDelay","step","amount","button","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","promiseDelay","Number","value","promiseStep","promiseAmount","position1","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.48157223.js.map"}